// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { SUPABASE_URL, SUPABASE_ANON_KEY } from '@/config';

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create the Supabase client with enhanced persistence configuration
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_ANON_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
      flowType: 'implicit',
      storageKey: 'sb-yoqsadxajmnqhhkajiyk-auth-token',
      storage: {
        getItem: (key) => {
          try {
            const storedItem = localStorage.getItem(key);
            if (storedItem) {
              return storedItem;
            }
            return null;
          } catch (error) {
            console.error('Error accessing localStorage:', error);
            return null;
          }
        },
        setItem: (key, value) => {
          try {
            localStorage.setItem(key, value);
          } catch (error) {
            console.error('Error setting localStorage:', error);
          }
        },
        removeItem: (key) => {
          try {
            localStorage.removeItem(key);
          } catch (error) {
            console.error('Error removing from localStorage:', error);
          }
        }
      }
    },
    global: {
      headers: {
        'X-Client-Info': 'ugclive-frontend'
      }
    }
  }
);

// Enable realtime functionality
export const enableRealtimeForGeneratedVideos = async () => {
  try {
    await supabase
      .channel('generated_videos_changes')
      .subscribe((status) => {
        console.log('Realtime subscription status:', status);
      });
    console.log('Realtime subscription initialized for generated_videos');
  } catch (error) {
    console.error('Error enabling realtime:', error);
  }
};
